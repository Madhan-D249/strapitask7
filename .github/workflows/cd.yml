name: CD - Terraform Deployment

on:
  workflow_dispatch:
    inputs:
      action:
        description: "Terraform action to perform (apply/destroy)"
        required: true
        default: "apply"
        type: choice
        options:
          - apply
          - destroy

env:
  AWS_REGION: us-east-2
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  ECR_REPOSITORY: strapi-appmaxxy

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Set fixed image tag
        if: ${{ github.event.inputs.action == 'apply' }}
        run: |
          IMAGE_TAG="maxxy"
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
          echo "IMAGE_URI=${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG" >> $GITHUB_ENV

      - name: Generate image.auto.tfvars
        if: ${{ github.event.inputs.action == 'apply' }}
        env:
          APP_KEYS: ${{ secrets.APP_KEYS }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          ADMIN_JWT_SECRET: ${{ secrets.ADMIN_JWT_SECRET }}
          API_TOKEN_SALT: ${{ secrets.API_TOKEN_SALT }}
        run: |
          echo "container_image = \"$IMAGE_URI\"" > image.auto.tfvars
          echo "app_keys = \"${APP_KEYS//[$'\t\r\n']}\"" >> image.auto.tfvars
          echo "jwt_secret = \"${JWT_SECRET//[$'\t\r\n']}\"" >> image.auto.tfvars
          echo "admin_jwt_secret = \"${ADMIN_JWT_SECRET//[$'\t\r\n']}\"" >> image.auto.tfvars
          echo "api_token_salt = \"${API_TOKEN_SALT//[$'\t\r\n']}\"" >> image.auto.tfvars

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        if: ${{ github.event.inputs.action == 'apply' }}
        run: terraform plan -var-file="image.auto.tfvars"

      - name: Terraform Apply
        if: ${{ github.event.inputs.action == 'apply' }}
        run: terraform apply -var-file="image.auto.tfvars" -auto-approve

      - name: Terraform Destroy
        if: ${{ github.event.inputs.action == 'destroy' }}
        run: terraform destroy -auto-approve

      - name: Upload Terraform state as artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: terraform-state
          path: |
            *.tfstate
            *.tfstate.*
