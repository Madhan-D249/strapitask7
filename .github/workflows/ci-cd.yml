name: CI/CD - Strapi Deployment

on:
  push:
    branches:
      - master

env:
  AWS_REGION: us-east-2
  AWS_ACCOUNT_ID: 607700977843
  ECR_REPOSITORY: strapi-appmaxxy
  CONTAINER_NAME: madhan-strapi
  ECS_CLUSTER: madhan-strapi-cluster
  ECS_SERVICE: madhan-strapi-service
  CODEDEPLOY_APP_NAME: madhan-strapi
  CODEDEPLOY_DEPLOYMENT_GROUP: madhan-strapi-dg

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Generate image tag
        id: tag
        run: |
          echo "IMAGE_TAG=$(date +%s)" >> $GITHUB_ENV
          echo "${IMAGE_TAG}" > image_tag.txt

      - name: Build, tag, and push image to ECR
        run: |
          docker build -t $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG -f my-strapi/Dockerfile my-strapi
          docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Upload image tag artifact
        uses: actions/upload-artifact@v4
        with:
          name: image-tag
          path: image_tag.txt

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: |
          terraform plan -input=false -no-color \
          -var="image_tag=${{ env.IMAGE_TAG }}" \
          -var="ecr_repo=${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}" \
          -var="app_keys=${{ secrets.APP_KEYS }}" \
          -var="jwt_secret=${{ secrets.JWT_SECRET }}" \
          -var="admin_jwt_secret=${{ secrets.ADMIN_JWT_SECRET }}" \
          -var="api_token_salt=${{ secrets.API_TOKEN_SALT }}"

      - name: Terraform Apply
        run: |
          terraform apply -auto-approve -input=false -no-color \
          -var="image_tag=${{ env.IMAGE_TAG }}" \
          -var="ecr_repo=${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}" \
          -var="app_keys=${{ secrets.APP_KEYS }}" \
          -var="jwt_secret=${{ secrets.JWT_SECRET }}" \
          -var="admin_jwt_secret=${{ secrets.ADMIN_JWT_SECRET }}" \
          -var="api_token_salt=${{ secrets.API_TOKEN_SALT }}"

     